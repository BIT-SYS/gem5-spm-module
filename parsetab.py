
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '-\xf5V,io\xcf\x88/\xea\xce\x9c.+\x86k'
    
_lr_action_items = {'PEEK':([115,158,160,174,203,227,260,320,336,341,365,366,367,369,371,372,374,],[142,142,-92,-75,-74,-81,-91,-82,-87,-93,-84,-94,-95,-85,-83,-86,-88,]),'STAR':([4,19,21,57,72,144,145,148,155,159,162,164,167,168,169,170,202,204,207,208,211,216,219,241,262,264,267,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,302,304,309,313,319,321,334,335,350,352,355,362,370,],[-65,-46,-45,-44,97,-131,-130,-107,-99,-96,-129,-98,-102,-134,226,-132,226,-101,226,226,226,-97,-125,-122,226,-103,-126,226,-133,226,226,226,-108,226,226,226,226,226,226,-109,226,226,226,226,97,226,-105,-128,-100,-127,-129,226,-104,-89,-106,226,-90,]),'EXTERN_TYPE':([0,1,4,6,14,43,52,58,69,91,114,128,174,175,176,181,182,188,195,198,203,244,246,248,250,256,295,305,306,323,325,330,],[18,18,-65,-23,-26,-60,-6,-7,-22,-59,-10,-17,-75,-28,-25,-27,-24,18,-18,-14,-74,-20,18,-19,-21,-16,-8,-13,-12,-9,-11,-15,]),'FLOATNUMBER':([115,143,149,150,153,158,160,165,173,174,203,205,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,255,260,308,310,311,316,320,336,341,351,365,366,367,369,371,372,374,],[144,144,144,144,144,144,-92,144,144,-75,-74,144,144,144,144,144,144,144,-81,144,144,144,144,144,144,144,144,144,144,144,144,-91,144,144,144,144,-82,-87,-93,144,-84,-94,-95,-85,-83,-86,-88,]),'VOID':([0,1,4,6,14,43,52,58,69,91,108,114,128,129,133,174,175,176,181,182,188,195,198,203,244,246,248,250,256,295,299,305,306,323,325,329,330,359,360,],[2,2,-65,-23,-26,-60,-6,-7,-22,-59,2,-10,-17,2,2,-75,-28,-25,-27,-24,2,-18,-14,-74,-20,2,-19,-21,-16,-8,-33,-13,-12,-9,-11,-34,-15,-32,-31,]),'GLOBAL':([0,1,4,6,14,43,52,58,69,91,114,128,174,175,176,181,182,188,195,198,203,244,246,248,250,256,295,305,306,323,325,330,],[3,3,-65,-23,-26,-60,-6,-7,-22,-59,-10,-17,-75,-28,-25,-27,-24,3,-18,-14,-74,-20,3,-19,-21,-16,-8,-13,-12,-9,-11,-15,]),'NUMBER':([98,115,118,143,149,150,153,158,160,165,173,174,203,205,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,255,260,308,310,311,316,320,336,341,351,365,366,367,369,371,372,374,],[122,145,178,145,145,145,145,145,-92,145,145,-75,-74,145,145,145,145,145,145,145,-81,145,145,145,145,145,145,145,145,145,145,145,145,-91,145,145,145,145,-82,-87,-93,145,-84,-94,-95,-85,-83,-86,-88,]),',':([4,19,21,31,42,43,44,46,47,54,55,56,57,59,60,61,64,70,75,77,87,91,92,95,96,100,107,119,120,121,122,139,140,141,144,145,148,155,159,162,164,167,168,170,177,178,179,183,190,194,197,204,207,208,216,219,241,242,259,262,264,265,267,269,270,272,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,292,297,302,309,313,319,321,326,328,331,334,337,338,342,346,350,352,355,370,],[-65,-46,-45,50,50,-60,63,67,50,50,50,50,-44,50,50,85,90,94,-73,99,110,-59,113,50,-53,50,131,-54,-71,-70,-72,50,-134,50,-131,-130,-107,-99,-96,-129,-98,-102,-134,-132,-58,-56,-57,50,249,50,50,-101,-124,-123,-97,-125,-122,-55,307,308,-103,311,-126,314,315,317,-133,-118,-121,-113,-108,-115,-117,-111,-112,-114,-110,-109,-120,-116,-119,322,50,327,-105,-128,-100,-127,50,50,50,351,50,50,358,327,-104,-89,-106,-90,]),'IDENT':([0,1,2,4,6,10,14,15,19,21,27,28,29,30,34,35,36,37,39,40,41,43,45,49,50,52,53,57,58,63,64,67,69,72,85,88,90,91,94,97,98,99,103,108,110,113,114,115,125,126,128,129,130,131,133,134,135,137,138,143,147,149,150,153,158,160,161,165,168,173,174,175,176,181,182,185,188,192,195,198,201,203,205,206,209,210,212,213,214,217,218,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,244,246,248,249,250,254,255,256,257,260,293,295,299,302,305,306,307,308,310,311,314,315,316,317,320,323,325,327,329,330,336,341,343,351,359,360,365,366,367,369,371,372,374,],[4,4,-47,-65,-23,4,-26,4,-46,-45,4,4,4,4,4,4,4,4,4,4,4,-60,4,4,4,-6,4,-44,-7,4,4,4,-22,4,4,4,4,-59,4,4,4,4,4,4,4,4,-10,4,4,4,-17,4,4,4,4,4,-48,-49,4,4,4,4,4,4,4,-92,4,4,-45,4,-75,-28,-25,-27,-24,4,4,4,-18,4,4,-74,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,-81,4,4,4,4,4,4,4,4,4,4,4,4,4,-20,4,-19,4,-21,4,4,-16,4,-91,-37,-8,-33,4,4,-12,4,4,4,4,4,4,4,4,-82,-9,-11,4,-34,-15,-87,-93,-40,4,-32,-31,-84,-94,-95,-85,-83,-86,-88,]),'NEW':([115,143,149,150,153,158,160,165,173,174,203,205,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,255,260,308,310,311,316,320,336,341,351,365,366,367,369,371,372,374,],[147,147,147,147,147,147,-92,147,147,-75,-74,147,147,147,147,147,147,147,-81,147,147,147,147,147,147,147,147,147,147,147,147,-91,147,147,147,147,-82,-87,-93,147,-84,-94,-95,-85,-83,-86,-88,]),'RIGHTSHIFT':([4,19,21,57,144,145,148,155,159,162,164,167,168,169,170,202,204,207,208,211,216,219,241,262,264,267,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,304,309,313,319,321,334,335,350,352,355,362,370,],[-65,-46,-45,-44,-131,-130,-107,-99,-96,-129,-98,-102,-134,235,-132,235,-101,235,235,235,-97,-125,-122,235,-103,-126,235,-133,235,-121,235,-108,235,235,-111,235,235,-110,-109,-120,235,235,235,235,-105,-128,-100,-127,-129,235,-104,-89,-106,235,-90,]),'DOT':([4,19,21,57,144,145,148,155,159,162,164,167,168,170,204,216,264,267,275,309,313,319,321,334,350,352,355,370,],[-65,-46,-45,-44,-131,-130,206,-99,-96,-129,-98,-102,-134,-132,-101,-97,-103,-126,-133,-105,-128,-100,-127,-129,-104,-89,-106,-90,]),'LEFTSHIFT':([4,19,21,57,144,145,148,155,159,162,164,167,168,169,170,202,204,207,208,211,216,219,241,262,264,267,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,304,309,313,319,321,334,335,350,352,355,362,370,],[-65,-46,-45,-44,-131,-130,-107,-99,-96,-129,-98,-102,-134,224,-132,224,-101,224,224,224,-97,-125,-122,224,-103,-126,224,-133,224,-121,224,-108,224,224,-111,224,224,-110,-109,-120,224,224,224,224,-105,-128,-100,-127,-129,224,-104,-89,-106,224,-90,]),'INCR':([115,143,149,150,153,158,160,165,173,174,203,205,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,255,260,308,310,311,316,320,336,341,351,365,366,367,369,371,372,374,],[150,150,150,150,150,150,-92,150,150,-75,-74,150,150,150,150,150,150,150,-81,150,150,150,150,150,150,150,150,150,150,150,150,-91,150,150,150,150,-82,-87,-93,150,-84,-94,-95,-85,-83,-86,-88,]),'TRANS':([0,1,4,6,14,43,52,58,69,91,114,128,174,175,176,181,182,188,195,198,203,244,246,248,250,256,295,305,306,323,325,330,],[7,7,-65,-23,-26,-60,-6,-7,-22,-59,-10,-17,-75,-28,-25,-27,-24,7,-18,-14,-74,-20,7,-19,-21,-16,-8,-13,-12,-9,-11,-15,]),'SEMI':([4,19,21,31,32,38,48,51,57,64,75,76,77,95,100,104,117,120,121,122,123,124,144,145,148,155,159,162,164,167,168,169,170,183,197,202,204,207,208,216,219,241,243,253,258,264,267,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,297,304,309,312,313,319,321,324,328,348,350,352,355,356,364,370,373,],[-65,-46,-45,-2,52,58,69,-67,-44,88,-73,-66,-69,-2,-2,128,176,-71,-70,-72,-68,182,-131,-130,-107,-99,-96,-129,-98,-102,-134,227,-132,-2,-2,260,-101,-124,-123,-97,-125,-122,293,299,306,-103,-126,-133,-118,-121,-113,-108,-115,-117,-111,-112,-114,-110,-109,-120,-116,320,-119,-2,329,-105,336,-128,-100,-127,343,-2,360,-104,-89,-106,365,372,-90,374,]),'STATIC_CAST':([115,143,149,150,153,158,160,165,173,174,203,205,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,255,260,308,310,311,316,320,336,341,351,365,366,367,369,371,372,374,],[151,151,151,151,151,151,-92,151,151,-75,-74,151,151,151,151,151,151,151,-81,151,151,151,151,151,151,151,151,151,151,151,151,-91,151,151,151,151,-82,-87,-93,151,-84,-94,-95,-85,-83,-86,-88,]),')':([4,19,21,42,43,47,49,51,53,54,55,56,57,59,60,62,68,70,71,73,75,76,77,78,79,80,82,83,84,87,91,94,96,109,116,119,120,121,122,123,139,140,141,144,145,148,155,159,162,164,167,168,170,177,178,179,194,199,200,204,207,208,211,216,219,221,241,242,252,254,261,262,264,266,267,268,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,291,300,301,302,303,308,309,310,313,316,319,321,327,331,332,333,334,335,337,338,339,340,345,346,347,349,350,352,353,354,355,362,368,370,],[-65,-46,-45,-2,-60,-2,-2,-67,-2,-2,81,-2,-44,-2,-2,86,93,-51,95,-52,-73,-66,-69,100,101,102,104,105,106,-2,-59,-2,-53,138,-50,-54,-71,-70,-72,-68,-2,-134,-2,-131,-130,-107,-99,-96,-129,-98,-102,-134,-132,-58,-56,-57,-2,257,258,-101,-124,-123,267,-97,-125,-2,-122,-55,298,-2,-80,-79,-103,312,-126,313,318,319,-133,-118,-121,-113,-108,-115,-117,-111,-112,-114,-110,-109,-120,-116,-119,321,326,-43,-42,328,-2,-105,-2,-128,-2,-100,-127,-2,-2,-78,350,-129,352,-2,-2,355,356,-41,-42,-43,361,-104,-89,363,364,-106,370,373,-90,]),'(':([3,4,7,8,9,16,17,18,22,23,25,31,33,115,142,143,149,150,151,152,153,154,156,157,158,160,163,165,166,168,171,172,173,174,197,203,205,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,255,260,264,271,308,310,311,316,320,336,341,351,365,366,367,369,371,372,374,],[27,-65,28,29,30,34,35,36,39,40,41,49,53,153,201,153,153,153,209,210,153,212,213,214,153,-92,218,153,220,221,239,240,153,-75,254,-74,153,153,153,153,153,153,153,-81,153,153,153,153,153,153,153,153,153,153,153,153,-91,310,316,153,153,153,153,-82,-87,-93,153,-84,-94,-95,-85,-83,-86,-88,]),'IS_INVALID':([115,143,149,150,153,158,160,165,173,174,203,205,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,255,260,308,310,311,316,320,336,341,351,365,366,367,369,371,372,374,],[154,154,154,154,154,154,-92,154,154,-75,-74,154,154,154,154,154,154,154,-81,154,154,154,154,154,154,154,154,154,154,154,154,-91,154,154,154,154,-82,-87,-93,154,-84,-94,-95,-85,-83,-86,-88,]),'NE':([4,19,21,57,144,145,148,155,159,162,164,167,168,169,170,202,204,207,208,211,216,219,241,262,264,267,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,304,309,313,319,321,334,335,350,352,355,362,370,],[-65,-46,-45,-44,-131,-130,-107,-99,-96,-129,-98,-102,-134,229,-132,229,-101,229,229,229,-97,-125,-122,229,-103,-126,229,-133,229,-121,-113,-108,-115,-117,-111,-112,-114,-110,-109,-120,-116,229,229,229,-105,-128,-100,-127,-129,229,-104,-89,-106,229,-90,]),'OUT_PORT':([0,1,4,6,14,43,52,58,69,91,114,128,174,175,176,181,182,188,195,198,203,244,246,248,250,256,295,305,306,323,325,330,],[8,8,-65,-23,-26,-60,-6,-7,-22,-59,-10,-17,-75,-28,-25,-27,-24,8,-18,-14,-74,-20,8,-19,-21,-16,-8,-13,-12,-9,-11,-15,]),'ENQUEUE':([115,158,160,174,203,227,260,320,336,341,365,366,367,369,371,372,374,],[156,156,-92,-75,-74,-81,-91,-82,-87,-93,-84,-94,-95,-85,-83,-86,-88,]),'LT':([4,19,21,57,144,145,148,155,159,162,164,167,168,169,170,202,204,207,208,211,216,219,241,262,264,267,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,304,309,313,319,321,334,335,350,352,355,362,370,],[-65,-46,-45,-44,-131,-130,-107,-99,-96,-129,-98,-102,-134,231,-132,231,-101,231,231,231,-97,-125,-122,231,-103,-126,231,-133,231,-121,-113,-108,-115,231,-111,-112,-114,-110,-109,-120,231,231,231,231,-105,-128,-100,-127,-129,231,-104,-89,-106,231,-90,]),'DOUBLE_COLON':([4,19,21,57,161,168,],[-65,37,-45,-44,217,-45,]),'PLUS':([4,19,21,57,144,145,148,155,159,162,164,167,168,169,170,202,204,207,208,211,216,219,241,262,264,267,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,304,309,313,319,321,334,335,350,352,355,362,370,],[-65,-46,-45,-44,-131,-130,-107,-99,-96,-129,-98,-102,-134,233,-132,233,-101,233,233,233,-97,-125,-122,233,-103,-126,233,-133,233,233,233,-108,233,233,-111,233,233,-110,-109,233,233,233,233,233,-105,-128,-100,-127,-129,233,-104,-89,-106,233,-90,]),'DECR':([115,143,149,150,153,158,160,165,173,174,203,205,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,255,260,308,310,311,316,320,336,341,351,365,366,367,369,371,372,374,],[149,149,149,149,149,149,-92,149,149,-75,-74,149,149,149,149,149,149,149,-81,149,149,149,149,149,149,149,149,149,149,149,149,-91,149,149,149,149,-82,-87,-93,149,-84,-94,-95,-85,-83,-86,-88,]),'ACTION':([0,1,4,6,14,43,52,58,69,91,114,128,174,175,176,181,182,188,195,198,203,244,246,248,250,256,295,305,306,323,325,330,],[9,9,-65,-23,-26,-60,-6,-7,-22,-59,-10,-17,-75,-28,-25,-27,-24,9,-18,-14,-74,-20,9,-19,-21,-16,-8,-13,-12,-9,-11,-15,]),':':([4,81,102,168,296,],[-65,103,126,222,222,]),'=':([4,74,96,119,139,],[-65,98,118,180,98,]),'ASSIGN':([4,19,21,57,144,145,148,155,159,162,164,167,168,169,170,197,204,207,208,216,219,241,264,267,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,309,313,319,321,350,352,355,370,],[-65,-46,-45,-44,-131,-130,-107,-99,-96,-129,-98,-102,-134,237,-132,255,-101,-124,-123,-97,-125,-122,-103,-126,-133,-118,-121,-113,-108,-115,-117,-111,-112,-114,-110,-109,-120,-116,-119,-105,-128,-100,-127,-104,-89,-106,-90,]),'$end':([0,1,4,5,6,11,12,14,24,26,43,52,58,69,91,114,128,174,175,176,181,182,195,198,203,244,248,250,256,295,305,306,323,325,330,],[-2,-2,-65,0,-23,-5,-3,-26,-1,-4,-60,-6,-7,-22,-59,-10,-17,-75,-28,-25,-27,-24,-18,-14,-74,-20,-19,-21,-16,-8,-13,-12,-9,-11,-15,]),'GT':([4,19,21,57,144,145,148,155,159,162,164,167,168,169,170,202,204,207,208,211,216,219,241,262,264,267,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,304,309,313,319,321,334,335,350,352,355,362,370,],[-65,-46,-45,-44,-131,-130,-107,-99,-96,-129,-98,-102,-134,225,-132,225,-101,225,225,225,-97,-125,-122,225,-103,-126,225,-133,225,-121,-113,-108,-115,225,-111,-112,-114,-110,-109,-120,225,225,225,225,-105,-128,-100,-127,-129,225,-104,-89,-106,225,-90,]),'PROTOCOL':([0,1,4,6,14,43,52,58,69,91,114,128,174,175,176,181,182,188,195,198,203,244,246,248,250,256,295,305,306,323,325,330,],[13,13,-65,-23,-26,-60,-6,-7,-22,-59,-10,-17,-75,-28,-25,-27,-24,13,-18,-14,-74,-20,13,-19,-21,-16,-8,-13,-12,-9,-11,-15,]),'STRING':([13,20,50,98,99,110,115,118,143,149,150,153,158,160,165,173,174,180,203,205,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,255,260,308,310,311,316,320,322,336,341,351,358,365,366,367,369,371,372,374,],[32,38,75,121,75,75,162,177,162,162,162,162,162,-92,162,162,-75,242,-74,162,162,162,162,162,162,162,-81,162,162,162,162,162,162,162,162,162,162,162,162,-91,162,162,334,162,-82,342,-87,-93,162,368,-84,-94,-95,-85,-83,-86,-88,]),'STALL_AND_WAIT':([115,158,160,174,203,227,260,320,336,341,365,366,367,369,371,372,374,],[163,163,-92,-75,-74,-81,-91,-82,-87,-93,-84,-94,-95,-85,-83,-86,-88,]),'OOD':([115,143,149,150,153,158,160,165,173,174,203,205,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,255,260,308,310,311,316,320,336,341,351,365,366,367,369,371,372,374,],[167,167,167,167,167,167,-92,167,167,-75,-74,167,167,167,167,167,167,167,-81,167,167,167,167,167,167,167,167,167,167,167,167,-91,167,167,167,167,-82,-87,-93,167,-84,-94,-95,-85,-83,-86,-88,]),'ENUM':([0,1,4,6,14,43,52,58,69,91,114,128,174,175,176,181,182,188,195,198,203,244,246,248,250,256,295,305,306,323,325,330,],[16,16,-65,-23,-26,-60,-6,-7,-22,-59,-10,-17,-75,-28,-25,-27,-24,16,-18,-14,-74,-20,16,-19,-21,-16,-8,-13,-12,-9,-11,-15,]),'ELSE':([174,203,341,],[-75,-74,357,]),'MACHINE':([0,1,4,6,14,43,52,58,69,91,114,128,174,175,176,181,182,188,195,198,203,244,246,248,250,256,295,305,306,323,325,330,],[17,17,-65,-23,-26,-60,-6,-7,-22,-59,-10,-17,-75,-28,-25,-27,-24,17,-18,-14,-74,-20,17,-19,-21,-16,-8,-13,-12,-9,-11,-15,]),'GE':([4,19,21,57,144,145,148,155,159,162,164,167,168,169,170,202,204,207,208,211,216,219,241,262,264,267,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,304,309,313,319,321,334,335,350,352,355,362,370,],[-65,-46,-45,-44,-131,-130,-107,-99,-96,-129,-98,-102,-134,228,-132,228,-101,228,228,228,-97,-125,-122,228,-103,-126,228,-133,228,-121,-113,-108,-115,228,-111,-112,-114,-110,-109,-120,228,228,228,228,-105,-128,-100,-127,-129,228,-104,-89,-106,228,-90,]),'LE':([4,19,21,57,144,145,148,155,159,162,164,167,168,169,170,202,204,207,208,211,216,219,241,262,264,267,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,304,309,313,319,321,334,335,350,352,355,362,370,],[-65,-46,-45,-44,-131,-130,-107,-99,-96,-129,-98,-102,-134,232,-132,232,-101,232,232,232,-97,-125,-122,232,-103,-126,232,-133,232,-121,-113,-108,-115,232,-111,-112,-114,-110,-109,-120,232,232,232,232,-105,-128,-100,-127,-129,232,-104,-89,-106,232,-90,]),'SLASH':([4,19,21,57,144,145,148,155,159,162,164,167,168,169,170,202,204,207,208,211,216,219,241,262,264,267,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,304,309,313,319,321,334,335,350,352,355,362,370,],[-65,-46,-45,-44,-131,-130,-107,-99,-96,-129,-98,-102,-134,234,-132,234,-101,234,234,234,-97,-125,-122,234,-103,-126,234,-133,234,234,234,-108,234,234,234,234,234,234,-109,234,234,234,234,234,-105,-128,-100,-127,-129,234,-104,-89,-106,234,-90,]),'[':([4,19,21,57,144,145,148,155,159,162,164,167,168,170,204,216,264,267,275,309,313,319,321,334,350,352,355,370,],[-65,-46,-45,-44,-131,-130,205,-99,-96,-129,-98,-102,-134,-132,-101,-97,-103,-126,-133,-105,-128,-100,-127,-129,-104,-89,-106,-90,]),'INCLUDE':([0,1,4,6,14,43,52,58,69,91,114,128,174,175,176,181,182,188,195,198,203,244,246,248,250,256,295,305,306,323,325,330,],[20,20,-65,-23,-26,-60,-6,-7,-22,-59,-10,-17,-75,-28,-25,-27,-24,20,-18,-14,-74,-20,20,-19,-21,-16,-8,-13,-12,-9,-11,-15,]),']':([4,19,21,57,144,145,148,155,159,162,164,167,168,170,204,205,207,208,216,219,241,261,262,263,264,267,275,276,277,278,279,280,281,282,283,284,285,286,287,288,290,308,309,313,319,321,332,350,352,355,370,],[-65,-46,-45,-44,-131,-130,-107,-99,-96,-129,-98,-102,-134,-132,-101,-2,-124,-123,-97,-125,-122,-80,-79,309,-103,-126,-133,-118,-121,-113,-108,-115,-117,-111,-112,-114,-110,-109,-120,-116,-119,-2,-105,-128,-100,-127,-78,-104,-89,-106,-90,]),'IF':([115,158,160,174,203,227,260,320,336,341,357,365,366,367,369,371,372,374,],[166,166,-92,-75,-74,-81,-91,-82,-87,-93,166,-84,-94,-95,-85,-83,-86,-88,]),'AND':([4,19,21,57,144,145,148,155,159,162,164,167,168,169,170,202,204,207,208,211,216,219,241,262,264,267,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,304,309,313,319,321,334,335,350,352,355,362,370,],[-65,-46,-45,-44,-131,-130,-107,-99,-96,-129,-98,-102,-134,223,-132,223,-101,223,223,223,-97,-125,-122,223,-103,-126,223,-133,-118,-121,-113,-108,-115,-117,-111,-112,-114,-110,-109,-120,-116,223,-119,223,-105,-128,-100,-127,-129,223,-104,-89,-106,223,-90,]),'DASH':([4,19,21,57,115,143,144,145,148,149,150,153,155,158,159,160,162,164,165,167,168,169,170,173,174,202,203,204,205,207,208,211,216,219,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,241,255,260,262,264,267,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,304,308,309,310,311,313,316,319,320,321,334,335,336,341,350,351,352,355,362,365,366,367,369,370,371,372,374,],[-65,-46,-45,-44,165,165,-131,-130,-107,165,165,165,-99,165,-96,-92,-129,-98,165,-102,-134,230,-132,165,-75,230,-74,-101,165,230,230,230,-97,-125,165,165,165,165,165,165,-81,165,165,165,165,165,165,165,165,165,165,165,-122,165,-91,230,-103,-126,230,-133,230,230,230,-108,230,230,-111,230,230,-110,-109,230,230,230,230,230,165,-105,165,165,-128,165,-100,-82,-127,-129,230,-87,-93,-104,165,-89,-106,230,-84,-94,-95,-85,-90,-83,-86,-88,]),'RETURN':([115,158,160,174,203,227,260,320,336,341,365,366,367,369,371,372,374,],[143,143,-92,-75,-74,-81,-91,-82,-87,-93,-84,-94,-95,-85,-83,-86,-88,]),'EQ':([4,19,21,57,144,145,148,155,159,162,164,167,168,169,170,202,204,207,208,211,216,219,241,262,264,267,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,304,309,313,319,321,334,335,350,352,355,362,370,],[-65,-46,-45,-44,-131,-130,-107,-99,-96,-129,-98,-102,-134,236,-132,236,-101,236,236,236,-97,-125,-122,236,-103,-126,236,-133,236,-121,-113,-108,-115,-117,-111,-112,-114,-110,-109,-120,-116,236,236,236,-105,-128,-100,-127,-129,236,-104,-89,-106,236,-90,]),'STRUCT':([0,1,4,6,14,43,52,58,69,91,114,128,174,175,176,181,182,188,195,198,203,244,246,248,250,256,295,305,306,323,325,330,],[22,22,-65,-23,-26,-60,-6,-7,-22,-59,-10,-17,-75,-28,-25,-27,-24,22,-18,-14,-74,-20,22,-19,-21,-16,-8,-13,-12,-9,-11,-15,]),'COPY_HEAD':([115,158,160,174,203,227,260,320,336,341,365,366,367,369,371,372,374,],[157,157,-92,-75,-74,-81,-91,-82,-87,-93,-84,-94,-95,-85,-83,-86,-88,]),'STATE_DECL':([0,1,4,6,14,43,52,58,69,91,114,128,174,175,176,181,182,188,195,198,203,244,246,248,250,256,295,305,306,323,325,330,],[23,23,-65,-23,-26,-60,-6,-7,-22,-59,-10,-17,-75,-28,-25,-27,-24,23,-18,-14,-74,-20,23,-19,-21,-16,-8,-13,-12,-9,-11,-15,]),'CHECK_ALLOCATE':([115,158,160,174,203,227,260,320,336,341,365,366,367,369,371,372,374,],[152,152,-92,-75,-74,-81,-91,-82,-87,-93,-84,-94,-95,-85,-83,-86,-88,]),'LIT_BOOL':([115,118,143,149,150,153,158,160,165,173,174,203,205,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,255,260,308,310,311,316,320,336,341,351,365,366,367,369,371,372,374,],[170,179,170,170,170,170,170,-92,170,170,-75,-74,170,170,170,170,170,170,170,-81,170,170,170,170,170,170,170,170,170,170,170,170,-91,170,170,170,170,-82,-87,-93,170,-84,-94,-95,-85,-83,-86,-88,]),'IS_VALID':([115,143,149,150,153,158,160,165,173,174,203,205,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,255,260,308,310,311,316,320,336,341,351,365,366,367,369,371,372,374,],[171,171,171,171,171,171,-92,171,171,-75,-74,171,171,171,171,171,171,171,-81,171,171,171,171,171,171,171,171,171,171,171,171,-91,171,171,171,171,-82,-87,-93,171,-84,-94,-95,-85,-83,-86,-88,]),'CHECK_STOP_SLOTS':([115,158,160,174,203,227,260,320,336,341,365,366,367,369,371,372,374,],[172,172,-92,-75,-74,-81,-91,-82,-87,-93,-84,-94,-95,-85,-83,-86,-88,]),'NOT':([115,143,149,150,153,158,160,165,173,174,203,205,220,221,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,255,260,308,310,311,316,320,336,341,351,365,366,367,369,371,372,374,],[173,173,173,173,173,173,-92,173,173,-75,-74,173,173,173,173,173,173,173,-81,173,173,173,173,173,173,173,173,173,173,173,173,-91,173,173,173,173,-82,-87,-93,173,-84,-94,-95,-85,-83,-86,-88,]),'{':([4,28,35,43,51,63,70,73,75,76,77,86,91,93,94,95,96,100,101,103,105,106,116,117,119,120,121,122,123,124,126,127,138,177,178,179,187,198,242,257,298,305,318,326,344,357,361,363,],[-65,45,45,-60,-67,45,-51,-52,-73,-66,-69,108,-59,115,-2,-2,-53,-2,125,-2,129,130,-50,115,-54,-71,-70,-72,-68,115,-2,188,45,-58,-56,-57,246,45,-55,45,115,45,115,-2,115,115,115,115,]),'}':([1,4,6,11,12,14,26,43,45,52,58,64,65,66,69,88,89,90,91,108,111,112,114,115,125,128,129,130,132,133,136,146,158,160,174,175,176,181,182,184,185,186,188,189,191,192,193,195,196,198,203,215,227,244,245,246,247,248,250,251,256,260,293,294,295,299,305,306,320,323,325,329,330,336,341,343,359,360,365,366,367,369,371,372,374,],[-2,-65,-23,-5,-3,-26,-4,-60,-2,-6,-7,-2,91,-64,-22,-2,-63,-2,-59,-2,-61,-62,-10,174,-2,-17,-2,-2,195,-2,-30,203,-77,-92,-75,-28,-25,-27,-24,244,-2,-36,-2,248,250,-2,-39,-18,-29,-14,-74,-76,-81,-20,-35,-2,295,-19,-21,-38,-16,-91,-37,323,-8,-33,-13,-12,-82,-9,-11,-34,-15,-87,-93,-40,-32,-31,-84,-94,-95,-85,-83,-86,-88,]),'OR':([4,19,21,57,144,145,148,155,159,162,164,167,168,169,170,202,204,207,208,211,216,219,241,262,264,267,273,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,304,309,313,319,321,334,335,350,352,355,362,370,],[-65,-46,-45,-44,-131,-130,-107,-99,-96,-129,-98,-102,-134,238,-132,238,-101,238,238,238,-97,-125,-122,238,-103,-126,238,-133,-118,-121,-113,-108,-115,-117,-111,-112,-114,-110,-109,-120,-116,238,-119,238,-105,-128,-100,-127,-129,238,-104,-89,-106,238,-90,]),'IN_PORT':([0,1,4,6,14,43,52,58,69,91,114,128,174,175,176,181,182,188,195,198,203,244,246,248,250,256,295,305,306,323,325,330,],[25,25,-65,-23,-26,-60,-6,-7,-22,-59,-10,-17,-75,-28,-25,-27,-24,25,-18,-14,-74,-20,25,-19,-21,-16,-8,-13,-12,-9,-11,-15,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'decl':([0,1,188,246,],[1,1,1,1,]),'statements':([93,117,124,298,318,344,357,361,363,],[114,175,181,325,341,359,366,369,371,]),'type_enums':([125,185,],[184,245,]),'pairsx':([50,99,110,],[76,123,76,]),'type_members':([108,129,133,],[132,189,196,]),'statements_inner':([115,158,],[146,215,]),'enumeration':([115,143,149,150,153,158,165,173,205,220,221,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,249,255,308,310,311,316,351,],[155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,155,297,155,155,155,155,155,155,]),'file':([0,],[5,]),'type_state':([130,192,],[192,192,]),'type_member':([108,129,133,],[133,133,133,]),'type_or_void':([108,129,133,],[134,134,134,]),'param':([49,53,94,103,126,254,],[70,70,70,70,70,70,]),'aexpr':([115,143,149,150,153,158,165,173,205,220,221,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,255,308,310,311,316,351,],[148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,148,]),'literal':([115,143,149,150,153,158,165,173,205,220,221,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,255,308,310,311,316,351,],[164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,164,]),'params':([49,53,94,103,126,254,],[71,78,116,127,187,300,]),'statement':([115,158,],[158,158,]),'var':([113,115,131,143,149,150,153,158,165,173,201,205,210,212,213,214,218,220,221,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,255,308,310,311,315,316,317,351,],[141,159,194,159,159,159,159,159,159,159,259,159,266,268,269,270,272,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,159,291,292,159,159,159,159,338,159,340,159,]),'if_statement':([115,158,357,],[160,160,367,]),'type':([0,1,27,34,36,39,40,49,53,67,85,94,103,108,115,126,129,133,143,147,149,150,153,158,165,173,188,205,209,220,221,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,246,254,255,307,308,310,311,314,316,327,351,],[10,10,42,54,56,59,60,72,72,92,107,72,72,135,161,72,135,135,161,204,161,161,161,161,161,161,10,161,265,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,161,10,302,161,331,161,161,161,337,161,346,161,]),'empty':([0,1,31,42,45,47,49,53,54,55,56,59,60,64,87,88,90,94,95,100,103,108,125,126,129,130,133,139,141,183,185,188,192,194,197,205,221,246,254,297,308,310,316,326,327,328,331,337,338,],[11,11,51,51,66,51,73,73,51,51,51,51,51,66,51,66,66,73,51,51,73,136,186,73,136,193,136,51,51,51,186,11,193,51,51,261,261,11,301,51,261,261,261,51,347,51,51,51,51,]),'declsx':([0,1,188,246,],[12,26,12,12,]),'func_decl':([0,1,188,246,],[6,6,6,6,]),'func_def':([0,1,188,246,],[14,14,14,14,]),'idents':([28,35,63,138,198,257,305,],[44,55,87,198,256,305,330,]),'void':([0,1,108,129,133,188,246,],[15,15,137,137,137,15,15,]),'identx':([45,64,88,90,],[65,89,111,112,]),'type_states':([130,192,],[191,251,]),'pair':([50,99,110,],[77,77,77,]),'type_enum':([125,185,],[185,185,]),'typestr':([0,1,27,34,36,39,40,49,53,67,85,94,103,108,115,126,129,133,143,147,149,150,153,158,165,173,188,205,209,220,221,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,246,254,255,307,308,310,311,314,316,327,351,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'types':([254,327,],[303,345,]),'pairs':([31,42,47,54,55,56,59,60,87,95,100,139,141,183,194,197,297,326,328,331,337,338,],[48,62,68,79,80,82,83,84,109,117,124,199,200,243,252,253,324,344,348,349,353,354,]),'ident':([0,1,10,15,27,28,29,30,34,35,36,37,39,40,41,45,49,50,53,63,64,67,72,85,88,90,94,97,98,99,103,108,110,113,115,125,126,129,130,131,133,134,138,143,147,149,150,153,158,161,165,173,185,188,192,198,201,205,206,209,210,212,213,214,217,218,220,221,222,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,239,240,246,249,254,255,257,302,305,307,308,310,311,314,315,316,317,327,351,],[21,21,31,33,21,43,46,47,21,43,21,57,21,21,61,64,21,74,21,43,64,21,96,21,64,64,21,119,120,74,21,21,139,140,168,183,21,21,190,140,21,197,43,168,21,168,168,168,168,216,168,168,183,21,190,43,140,168,264,21,140,140,140,140,271,140,168,168,275,168,168,168,168,168,168,168,168,168,168,168,168,168,168,168,140,140,21,296,21,168,43,96,43,21,168,168,168,21,140,168,140,21,168,]),'expr':([115,143,149,150,153,158,165,173,205,220,221,223,224,225,226,228,229,230,231,232,233,234,235,236,237,238,255,308,310,311,316,351,],[169,202,207,208,211,169,219,241,262,273,262,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,304,262,262,335,262,362,]),'exprs':([205,221,308,310,316,],[263,274,332,333,339,]),'decls':([0,188,246,],[24,247,294,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> file","S'",1,None,None,None),
  ('file -> decls','file',1,'p_file','/home/jwx/gem5-hg/src/mem/slicc/parser.py',219),
  ('empty -> <empty>','empty',0,'p_empty','/home/jwx/gem5-hg/src/mem/slicc/parser.py',223),
  ('decls -> declsx','decls',1,'p_decls','/home/jwx/gem5-hg/src/mem/slicc/parser.py',226),
  ('declsx -> decl declsx','declsx',2,'p_declsx__list','/home/jwx/gem5-hg/src/mem/slicc/parser.py',230),
  ('declsx -> empty','declsx',1,'p_declsx__none','/home/jwx/gem5-hg/src/mem/slicc/parser.py',240),
  ('decl -> PROTOCOL STRING SEMI','decl',3,'p_decl__protocol','/home/jwx/gem5-hg/src/mem/slicc/parser.py',244),
  ('decl -> INCLUDE STRING SEMI','decl',3,'p_decl__include','/home/jwx/gem5-hg/src/mem/slicc/parser.py',253),
  ('decl -> MACHINE ( idents ) : params { decls }','decl',9,'p_decl__machine0','/home/jwx/gem5-hg/src/mem/slicc/parser.py',262),
  ('decl -> MACHINE ( idents pairs ) : params { decls }','decl',10,'p_decl__machine1','/home/jwx/gem5-hg/src/mem/slicc/parser.py',266),
  ('decl -> ACTION ( ident pairs ) statements','decl',6,'p_decl__action','/home/jwx/gem5-hg/src/mem/slicc/parser.py',270),
  ('decl -> IN_PORT ( ident , type , var pairs ) statements','decl',10,'p_decl__in_port','/home/jwx/gem5-hg/src/mem/slicc/parser.py',274),
  ('decl -> OUT_PORT ( ident , type , var pairs ) SEMI','decl',10,'p_decl__out_port','/home/jwx/gem5-hg/src/mem/slicc/parser.py',278),
  ('decl -> TRANS ( idents , idents , ident pairs ) idents','decl',10,'p_decl__trans0','/home/jwx/gem5-hg/src/mem/slicc/parser.py',282),
  ('decl -> TRANS ( idents , idents pairs ) idents','decl',8,'p_decl__trans1','/home/jwx/gem5-hg/src/mem/slicc/parser.py',286),
  ('decl -> TRANS ( idents , idents , ident pairs ) idents idents','decl',11,'p_decl__trans2','/home/jwx/gem5-hg/src/mem/slicc/parser.py',290),
  ('decl -> TRANS ( idents , idents pairs ) idents idents','decl',9,'p_decl__trans3','/home/jwx/gem5-hg/src/mem/slicc/parser.py',294),
  ('decl -> EXTERN_TYPE ( type pairs ) SEMI','decl',6,'p_decl__extern0','/home/jwx/gem5-hg/src/mem/slicc/parser.py',298),
  ('decl -> GLOBAL ( type pairs ) { type_members }','decl',8,'p_decl__global','/home/jwx/gem5-hg/src/mem/slicc/parser.py',303),
  ('decl -> STRUCT ( type pairs ) { type_members }','decl',8,'p_decl__struct','/home/jwx/gem5-hg/src/mem/slicc/parser.py',308),
  ('decl -> ENUM ( type pairs ) { type_enums }','decl',8,'p_decl__enum','/home/jwx/gem5-hg/src/mem/slicc/parser.py',312),
  ('decl -> STATE_DECL ( type pairs ) { type_states }','decl',8,'p_decl__state_decl','/home/jwx/gem5-hg/src/mem/slicc/parser.py',317),
  ('decl -> type ident pairs SEMI','decl',4,'p_decl__object','/home/jwx/gem5-hg/src/mem/slicc/parser.py',323),
  ('decl -> func_decl','decl',1,'p_decl__func_decl','/home/jwx/gem5-hg/src/mem/slicc/parser.py',328),
  ('func_decl -> void ident ( params ) pairs SEMI','func_decl',7,'p_func_decl__0','/home/jwx/gem5-hg/src/mem/slicc/parser.py',332),
  ('func_decl -> type ident ( params ) pairs SEMI','func_decl',7,'p_func_decl__0','/home/jwx/gem5-hg/src/mem/slicc/parser.py',333),
  ('decl -> func_def','decl',1,'p_decl__func_def','/home/jwx/gem5-hg/src/mem/slicc/parser.py',337),
  ('func_def -> void ident ( params ) pairs statements','func_def',7,'p_func_def__0','/home/jwx/gem5-hg/src/mem/slicc/parser.py',341),
  ('func_def -> type ident ( params ) pairs statements','func_def',7,'p_func_def__0','/home/jwx/gem5-hg/src/mem/slicc/parser.py',342),
  ('type_members -> type_member type_members','type_members',2,'p_type_members__list','/home/jwx/gem5-hg/src/mem/slicc/parser.py',347),
  ('type_members -> empty','type_members',1,'p_type_members__empty','/home/jwx/gem5-hg/src/mem/slicc/parser.py',351),
  ('type_member -> type_or_void ident ( types ) pairs SEMI','type_member',7,'p_type_method__0','/home/jwx/gem5-hg/src/mem/slicc/parser.py',355),
  ('type_member -> type_or_void ident ( params ) pairs statements','type_member',7,'p_type_method__1','/home/jwx/gem5-hg/src/mem/slicc/parser.py',359),
  ('type_member -> type_or_void ident pairs SEMI','type_member',4,'p_type_member__1','/home/jwx/gem5-hg/src/mem/slicc/parser.py',363),
  ('type_member -> type_or_void ident ASSIGN expr SEMI','type_member',5,'p_type_member__2','/home/jwx/gem5-hg/src/mem/slicc/parser.py',367),
  ('type_enums -> type_enum type_enums','type_enums',2,'p_type_enums__list','/home/jwx/gem5-hg/src/mem/slicc/parser.py',373),
  ('type_enums -> empty','type_enums',1,'p_type_enums__empty','/home/jwx/gem5-hg/src/mem/slicc/parser.py',377),
  ('type_enum -> ident pairs SEMI','type_enum',3,'p_type_enum','/home/jwx/gem5-hg/src/mem/slicc/parser.py',381),
  ('type_states -> type_state type_states','type_states',2,'p_type_states__list','/home/jwx/gem5-hg/src/mem/slicc/parser.py',386),
  ('type_states -> empty','type_states',1,'p_type_states__empty','/home/jwx/gem5-hg/src/mem/slicc/parser.py',390),
  ('type_state -> ident , enumeration pairs SEMI','type_state',5,'p_type_state','/home/jwx/gem5-hg/src/mem/slicc/parser.py',394),
  ('types -> type , types','types',3,'p_types__multiple','/home/jwx/gem5-hg/src/mem/slicc/parser.py',399),
  ('types -> type','types',1,'p_types__one','/home/jwx/gem5-hg/src/mem/slicc/parser.py',403),
  ('types -> empty','types',1,'p_types__empty','/home/jwx/gem5-hg/src/mem/slicc/parser.py',407),
  ('typestr -> typestr DOUBLE_COLON ident','typestr',3,'p_typestr__multi','/home/jwx/gem5-hg/src/mem/slicc/parser.py',411),
  ('typestr -> ident','typestr',1,'p_typestr__single','/home/jwx/gem5-hg/src/mem/slicc/parser.py',415),
  ('type -> typestr','type',1,'p_type__one','/home/jwx/gem5-hg/src/mem/slicc/parser.py',419),
  ('void -> VOID','void',1,'p_void','/home/jwx/gem5-hg/src/mem/slicc/parser.py',423),
  ('type_or_void -> type','type_or_void',1,'p_type_or_void','/home/jwx/gem5-hg/src/mem/slicc/parser.py',427),
  ('type_or_void -> void','type_or_void',1,'p_type_or_void','/home/jwx/gem5-hg/src/mem/slicc/parser.py',428),
  ('params -> param , params','params',3,'p_params__many','/home/jwx/gem5-hg/src/mem/slicc/parser.py',433),
  ('params -> param','params',1,'p_params__one','/home/jwx/gem5-hg/src/mem/slicc/parser.py',437),
  ('params -> empty','params',1,'p_params__none','/home/jwx/gem5-hg/src/mem/slicc/parser.py',441),
  ('param -> type ident','param',2,'p_param','/home/jwx/gem5-hg/src/mem/slicc/parser.py',445),
  ('param -> type STAR ident','param',3,'p_param__pointer','/home/jwx/gem5-hg/src/mem/slicc/parser.py',449),
  ('param -> type STAR ident = STRING','param',5,'p_param__pointer_default','/home/jwx/gem5-hg/src/mem/slicc/parser.py',453),
  ('param -> type ident = NUMBER','param',4,'p_param__default_number','/home/jwx/gem5-hg/src/mem/slicc/parser.py',457),
  ('param -> type ident = LIT_BOOL','param',4,'p_param__default_bool','/home/jwx/gem5-hg/src/mem/slicc/parser.py',461),
  ('param -> type ident = STRING','param',4,'p_param__default_string','/home/jwx/gem5-hg/src/mem/slicc/parser.py',465),
  ('idents -> { identx }','idents',3,'p_idents__braced','/home/jwx/gem5-hg/src/mem/slicc/parser.py',470),
  ('idents -> ident','idents',1,'p_idents__bare','/home/jwx/gem5-hg/src/mem/slicc/parser.py',474),
  ('identx -> ident SEMI identx','identx',3,'p_identx__multiple_1','/home/jwx/gem5-hg/src/mem/slicc/parser.py',478),
  ('identx -> ident , identx','identx',3,'p_identx__multiple_1','/home/jwx/gem5-hg/src/mem/slicc/parser.py',479),
  ('identx -> ident identx','identx',2,'p_identx__multiple_2','/home/jwx/gem5-hg/src/mem/slicc/parser.py',483),
  ('identx -> empty','identx',1,'p_identx__single','/home/jwx/gem5-hg/src/mem/slicc/parser.py',487),
  ('ident -> IDENT','ident',1,'p_ident','/home/jwx/gem5-hg/src/mem/slicc/parser.py',491),
  ('pairs -> , pairsx','pairs',2,'p_pairs__list','/home/jwx/gem5-hg/src/mem/slicc/parser.py',496),
  ('pairs -> empty','pairs',1,'p_pairs__empty','/home/jwx/gem5-hg/src/mem/slicc/parser.py',500),
  ('pairsx -> pair , pairsx','pairsx',3,'p_pairsx__many','/home/jwx/gem5-hg/src/mem/slicc/parser.py',504),
  ('pairsx -> pair','pairsx',1,'p_pairsx__one','/home/jwx/gem5-hg/src/mem/slicc/parser.py',509),
  ('pair -> ident = STRING','pair',3,'p_pair__assign','/home/jwx/gem5-hg/src/mem/slicc/parser.py',514),
  ('pair -> ident = ident','pair',3,'p_pair__assign','/home/jwx/gem5-hg/src/mem/slicc/parser.py',515),
  ('pair -> ident = NUMBER','pair',3,'p_pair__assign','/home/jwx/gem5-hg/src/mem/slicc/parser.py',516),
  ('pair -> STRING','pair',1,'p_pair__literal','/home/jwx/gem5-hg/src/mem/slicc/parser.py',520),
  ('statements -> { statements_inner }','statements',3,'p_statements__inner','/home/jwx/gem5-hg/src/mem/slicc/parser.py',525),
  ('statements -> { }','statements',2,'p_statements__none','/home/jwx/gem5-hg/src/mem/slicc/parser.py',529),
  ('statements_inner -> statement statements_inner','statements_inner',2,'p_statements_inner__many','/home/jwx/gem5-hg/src/mem/slicc/parser.py',533),
  ('statements_inner -> statement','statements_inner',1,'p_statements_inner__one','/home/jwx/gem5-hg/src/mem/slicc/parser.py',537),
  ('exprs -> expr , exprs','exprs',3,'p_exprs__multiple','/home/jwx/gem5-hg/src/mem/slicc/parser.py',541),
  ('exprs -> expr','exprs',1,'p_exprs__one','/home/jwx/gem5-hg/src/mem/slicc/parser.py',545),
  ('exprs -> empty','exprs',1,'p_exprs__empty','/home/jwx/gem5-hg/src/mem/slicc/parser.py',549),
  ('statement -> expr SEMI','statement',2,'p_statement__expression','/home/jwx/gem5-hg/src/mem/slicc/parser.py',553),
  ('statement -> expr ASSIGN expr SEMI','statement',4,'p_statement__assign','/home/jwx/gem5-hg/src/mem/slicc/parser.py',557),
  ('statement -> ENQUEUE ( var , type pairs ) statements','statement',8,'p_statement__enqueue','/home/jwx/gem5-hg/src/mem/slicc/parser.py',561),
  ('statement -> STALL_AND_WAIT ( var , var ) SEMI','statement',7,'p_statement__stall_and_wait','/home/jwx/gem5-hg/src/mem/slicc/parser.py',565),
  ('statement -> PEEK ( var , type pairs ) statements','statement',8,'p_statement__peek','/home/jwx/gem5-hg/src/mem/slicc/parser.py',569),
  ('statement -> COPY_HEAD ( var , var pairs ) SEMI','statement',8,'p_statement__copy_head','/home/jwx/gem5-hg/src/mem/slicc/parser.py',573),
  ('statement -> CHECK_ALLOCATE ( var ) SEMI','statement',5,'p_statement__check_allocate','/home/jwx/gem5-hg/src/mem/slicc/parser.py',577),
  ('statement -> CHECK_STOP_SLOTS ( var , STRING , STRING ) SEMI','statement',9,'p_statement__check_stop','/home/jwx/gem5-hg/src/mem/slicc/parser.py',581),
  ('aexpr -> STATIC_CAST ( type , expr )','aexpr',6,'p_statement__static_cast','/home/jwx/gem5-hg/src/mem/slicc/parser.py',585),
  ('aexpr -> STATIC_CAST ( type , STRING , expr )','aexpr',8,'p_statement__static_cast_ptr','/home/jwx/gem5-hg/src/mem/slicc/parser.py',589),
  ('statement -> RETURN expr SEMI','statement',3,'p_statement__return','/home/jwx/gem5-hg/src/mem/slicc/parser.py',593),
  ('statement -> if_statement','statement',1,'p_statement__if','/home/jwx/gem5-hg/src/mem/slicc/parser.py',597),
  ('if_statement -> IF ( expr ) statements','if_statement',5,'p_if_statement__if','/home/jwx/gem5-hg/src/mem/slicc/parser.py',601),
  ('if_statement -> IF ( expr ) statements ELSE statements','if_statement',7,'p_if_statement__if_else','/home/jwx/gem5-hg/src/mem/slicc/parser.py',605),
  ('if_statement -> IF ( expr ) statements ELSE if_statement','if_statement',7,'p_statement__if_else_if','/home/jwx/gem5-hg/src/mem/slicc/parser.py',609),
  ('aexpr -> var','aexpr',1,'p_expr__var','/home/jwx/gem5-hg/src/mem/slicc/parser.py',614),
  ('aexpr -> type ident','aexpr',2,'p_expr__localvar','/home/jwx/gem5-hg/src/mem/slicc/parser.py',618),
  ('aexpr -> literal','aexpr',1,'p_expr__literal','/home/jwx/gem5-hg/src/mem/slicc/parser.py',622),
  ('aexpr -> enumeration','aexpr',1,'p_expr__enumeration','/home/jwx/gem5-hg/src/mem/slicc/parser.py',626),
  ('aexpr -> ident ( exprs )','aexpr',4,'p_expr__func_call','/home/jwx/gem5-hg/src/mem/slicc/parser.py',630),
  ('aexpr -> NEW type','aexpr',2,'p_expr__new','/home/jwx/gem5-hg/src/mem/slicc/parser.py',634),
  ('aexpr -> OOD','aexpr',1,'p_expr__null','/home/jwx/gem5-hg/src/mem/slicc/parser.py',638),
  ('aexpr -> aexpr DOT ident','aexpr',3,'p_expr__member','/home/jwx/gem5-hg/src/mem/slicc/parser.py',642),
  ('aexpr -> aexpr DOT ident ( exprs )','aexpr',6,'p_expr__member_method_call','/home/jwx/gem5-hg/src/mem/slicc/parser.py',646),
  ('aexpr -> aexpr [ exprs ]','aexpr',4,'p_expr__member_method_call_lookup','/home/jwx/gem5-hg/src/mem/slicc/parser.py',650),
  ('aexpr -> type DOUBLE_COLON ident ( exprs )','aexpr',6,'p_expr__class_method_call','/home/jwx/gem5-hg/src/mem/slicc/parser.py',654),
  ('expr -> aexpr','expr',1,'p_expr__aexpr','/home/jwx/gem5-hg/src/mem/slicc/parser.py',658),
  ('expr -> expr STAR expr','expr',3,'p_expr__binary_op','/home/jwx/gem5-hg/src/mem/slicc/parser.py',662),
  ('expr -> expr SLASH expr','expr',3,'p_expr__binary_op','/home/jwx/gem5-hg/src/mem/slicc/parser.py',663),
  ('expr -> expr PLUS expr','expr',3,'p_expr__binary_op','/home/jwx/gem5-hg/src/mem/slicc/parser.py',664),
  ('expr -> expr DASH expr','expr',3,'p_expr__binary_op','/home/jwx/gem5-hg/src/mem/slicc/parser.py',665),
  ('expr -> expr LT expr','expr',3,'p_expr__binary_op','/home/jwx/gem5-hg/src/mem/slicc/parser.py',666),
  ('expr -> expr GT expr','expr',3,'p_expr__binary_op','/home/jwx/gem5-hg/src/mem/slicc/parser.py',667),
  ('expr -> expr LE expr','expr',3,'p_expr__binary_op','/home/jwx/gem5-hg/src/mem/slicc/parser.py',668),
  ('expr -> expr GE expr','expr',3,'p_expr__binary_op','/home/jwx/gem5-hg/src/mem/slicc/parser.py',669),
  ('expr -> expr EQ expr','expr',3,'p_expr__binary_op','/home/jwx/gem5-hg/src/mem/slicc/parser.py',670),
  ('expr -> expr NE expr','expr',3,'p_expr__binary_op','/home/jwx/gem5-hg/src/mem/slicc/parser.py',671),
  ('expr -> expr AND expr','expr',3,'p_expr__binary_op','/home/jwx/gem5-hg/src/mem/slicc/parser.py',672),
  ('expr -> expr OR expr','expr',3,'p_expr__binary_op','/home/jwx/gem5-hg/src/mem/slicc/parser.py',673),
  ('expr -> expr RIGHTSHIFT expr','expr',3,'p_expr__binary_op','/home/jwx/gem5-hg/src/mem/slicc/parser.py',674),
  ('expr -> expr LEFTSHIFT expr','expr',3,'p_expr__binary_op','/home/jwx/gem5-hg/src/mem/slicc/parser.py',675),
  ('expr -> NOT expr','expr',2,'p_expr__unary_op','/home/jwx/gem5-hg/src/mem/slicc/parser.py',680),
  ('expr -> INCR expr','expr',2,'p_expr__unary_op','/home/jwx/gem5-hg/src/mem/slicc/parser.py',681),
  ('expr -> DECR expr','expr',2,'p_expr__unary_op','/home/jwx/gem5-hg/src/mem/slicc/parser.py',682),
  ('expr -> DASH expr','expr',2,'p_expr__unary_op','/home/jwx/gem5-hg/src/mem/slicc/parser.py',683),
  ('aexpr -> ( expr )','aexpr',3,'p_expr__parens','/home/jwx/gem5-hg/src/mem/slicc/parser.py',687),
  ('aexpr -> IS_VALID ( var )','aexpr',4,'p_expr__is_valid_ptr','/home/jwx/gem5-hg/src/mem/slicc/parser.py',691),
  ('aexpr -> IS_INVALID ( var )','aexpr',4,'p_expr__is_invalid_ptr','/home/jwx/gem5-hg/src/mem/slicc/parser.py',695),
  ('literal -> STRING','literal',1,'p_literal__string','/home/jwx/gem5-hg/src/mem/slicc/parser.py',699),
  ('literal -> NUMBER','literal',1,'p_literal__number','/home/jwx/gem5-hg/src/mem/slicc/parser.py',703),
  ('literal -> FLOATNUMBER','literal',1,'p_literal__float','/home/jwx/gem5-hg/src/mem/slicc/parser.py',707),
  ('literal -> LIT_BOOL','literal',1,'p_literal__bool','/home/jwx/gem5-hg/src/mem/slicc/parser.py',711),
  ('enumeration -> ident : ident','enumeration',3,'p_enumeration','/home/jwx/gem5-hg/src/mem/slicc/parser.py',715),
  ('var -> ident','var',1,'p_var','/home/jwx/gem5-hg/src/mem/slicc/parser.py',719),
]
